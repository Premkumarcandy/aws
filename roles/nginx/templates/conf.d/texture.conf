server {
    listen       80;
    server_name  www.texture.ca upgrade.texture.ca secure.texture.ca origin-www.texture.ca preprod-www.texture.ca;

    root /var/www/html/www.texture.ca/app/src/webroot;
    
    client_max_body_size 10M;
    client_body_buffer_size 128K;

    charset utf-8;

    access_log	/var/log/nginx/texture.access.log main;
    error_log	/var/log/nginx/texture.error.log notice;
    rewrite_log					off;

    location /health_check.html {
        access_log			/dev/null;
        error_log			/dev/null;
    }

    add_header	'X-UA-Compatible' 'IE=Edge,chrome=1,requiresActiveX=true';
    add_header  'X-SDE-Name' "$hostname";
    add_header 	'X-Hosting-Env' "AWS";
    gzip        on;
    gzip_types  /text/html /text/css /text/javascript /text/plain /text/xml /text/x-component /application/javascript /application/json /application/xml /application/x-javascript /application/x-font-ttf /font/opentype /application/vnd.ms-fontobject /image/svg+xml;

    # send requests through WordPress unless file exists
    location / {
        index index.php;
        try_files $uri $uri/ /index.php?$args;
    }

    error_page 404 = @wordpress;
    
    # 404 handler that sends requests back to WordPress
    location @wordpress {
        fastcgi_pass   unix:/dev/shm/texture.sock;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_NAME /index.php; 
    }

    # pass the PHP scripts to FastCGI server listening on UNIX SOCKET
    location ~ \.php$ {
        fastcgi_pass unix:/dev/shm/texture.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include fastcgi_params;
        proxy_set_header REMOTE_USER $remote_user;
        proxy_cache_bypass $http_authorization;
        proxy_no_cache $http_authorization;
        try_files $uri @wordpress;
    }
    
    location = /robots.txt {
        rewrite ^ /index.php;
    }
    
    location ~* \.(txt|log)$ {
    	          deny all;
    }

}
