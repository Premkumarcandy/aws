- name: Creating rds_subnet_group
  rds_subnet_group:
    state: present
    name: "{{ env.name }}{{ cluster.name }}"
    description: "{{ name }} Subnet Group"
    # FIX: check subnets: private or public
    subnets:
      - "{{ ec2_vpc.subnets[0].id }}"
      - "{{ ec2_vpc.subnets[1].id }}"
  register: rds_subnet_group

- name: Debug rds_subnet_group
  debug:
    var: rds_subnet_group

- name: Creating Security Group for RDS
  ec2_group:
    name: "{{ env.name }}{{ cluster.name }}rds"
    description: "{{ env.name }}{{ cluster.name }}rds"
    vpc_id: "{{ ec2_vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 3306
        to_port: 3306
        cidr_ip: "{{ ec2_vpc.vpc.cidr_block }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: ec2_sg_rds
      
- name: Debug Security Group for RDS
  debug:
    var: ec2_sg_rds
    
- name: Creating RDS instance
  rds:
    command: create
    instance_name: "{{ env.name }}{{ cluster.name }}dbm01"
    db_engine: "{{ rds.db_engine }}"
    size: "{{ rds.size }}"
    instance_type: "{{ rds.instance_type }}"
    # FIX: use username and password from vault
    username: "{{ rds.username }}"
    password: "{{ rds.password }}"
    # rds_subnet_group
    # fix: get it from rds_subnet_group var
    subnet: "{{ env.name }}{{ cluster.name }}"
    vpc_security_groups: "{{ ec2_sg_rds.group_id }}"
    tags:
      env: "{{ env.name }}"
      cluster: "{{ cluster.name }}"
    wait: yes
    wait_timeout: 600
  register: rds_instance

- name: Debug rds
  debug:
    var: rds_instance

#- name: Write the RDS facts/values to the file rds_info.yml inside the project directory
#  shell: |
#    echo "db_hostname: {{ rds.instance.endpoint }}" > rds_info.yml
#    echo "db_name: {{ rds_db_name }}" >> rds_info.yml
#    echo "db_username: {{ rds_db_username }}" >> rds_info.yml
#    echo "db_password: {{ rds_db_password }}" >> rds_info.yml
