- name: Generate cluster certificate
  command: flocker-ca initialize "{{ cluster_name }}"
  args:
    chdir: /etc/flocker
    creates: /etc/flocker/cluster.crt

- name: Generate auth certs for control service and nodes
  command: flocker-ca create-control-certificate "{{ ec2_private_dns_name }}"
  args:
    chdir: /etc/flocker
    creates: "/etc/flocker/control-{{ ec2_private_dns_name }}.{{ item }}"
  with_items:
    - crt
    - key

#- name: Rename auth certs for control service and nodes
#  command: mv "control-{{ ec2_private_dns_name }}.crt" control-service.crt
#  args:
#    chdir: /etc/flocker
#    creates: /etc/flocker/control-service.crt

- name: Rename auth certs for control service and nodes
  command: mv "control-{{ ec2_private_dns_name }}.key" control-service.key
  args:
    chdir: /etc/flocker
    creates: /etc/flocker/control-service.key

- name: Copy cluster.crt to ansible host
  fetch:
    src: /etc/flocker/cluster.crt
    dest: /tmp/cluster.crt

#- name: Copy cluster.crt to the nodes
#  copy:
#    src: /tmp/cluster.crt 
#    dest: /etc/flocker/cluster.crt
      
#- name: set fact groups
#  set_fact:
#    node_list: "{{ groups['tag_Flocker_true'] }}"
    
#- name: debug groups
#  debug:
#    var: node_list
    
#- name: Copy Remote-To-Remote (from serverA to serverB)
#  synchronize:
#    src: /etc/flocker/cluster.crt
#    dest: /etc/flocker/cluster.crt
#  become: yes
#  delegate_to: "{{ item }}"
#  with_items: "{{ node_list }}"
